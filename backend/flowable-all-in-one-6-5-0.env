spring.main.banner-mode=off
spring.jpa.open-in-view=false

# Logging
logging.level.root=INFO
logging.level.org.flowable=INFO
logging.level.org.hibernate.SQL=INFO

# Spring Datasource
# spring.datasource.driver-class-name=org.postgresql.Driver
# spring.datasource.url=jdbc:postgresql://workflow-service-postgres:5432/flowable
# spring.datasource.username=admin
# spring.datasource.password=secret

# Spring JPA
# spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
# spring.jpa.hibernate.ddl-auto=create

# Flowable ...
flowable.modeler.app.deployment-api-url=http://host.docker.internal:8080/flowable-task/app-api

# Default Flowable Admin Accounts - See: 02-flowable.ldif
flowable.idm.app.admin.user-id=flowable
flowable.idm.app.admin.password=Password12
flowable.idm.app.admin.first-name=Flowable
flowable.idm.app.admin.last-name=Admin
flowable.idm.app.admin.email=flowable.admin@serendipity.org

flowable.common.app.idm-admin.user=flowable
flowable.common.app.idm-admin.password=Password12

# REST API - See: https://www.flowable.com/open-source/docs/bpmn/ch14-REST
# All REST-resources require a valid user with the rest-access-api privilege to be authenticated by default.
# If any valid user should be able to call the REST API, the 'flowable.rest.app.authentication-mode' can be set to 'any-user'.

flowable.rest.app.authentication-mode=any-user

# A default user that can access the REST API can be configured by settings the following properties:

# flowable.rest.app.admin.user-id=restAPI
# flowable.rest.app.admin.password=secret
# flowable.rest.app.admin.first-name=REST
# flowable.rest.app.admin.last-name=API

# When the REST app boots up, the user is created if it doesnâ€™t exist or fetched otherwise.
# This user will be given the 'access-rest-api' privilege which is needed by default to access the REST API.
# Note: The user is not being created, so I have commented it out for now.
# The REST API can be accessed using Basic Authorization, for example:
#   curl -i 'http://flowable:Password12@serendipity.localhost:8080/flowable-task/process-api/repository/process-definitions'

# LDAP
# Server connection params
flowable.idm.ldap.enabled=true
# flowable.idm.ldap.server=ldap://localhost
flowable.idm.ldap.server=ldap://host.docker.internal
flowable.idm.ldap.port=389
flowable.idm.ldap.user=cn=admin,dc=serendipity,dc=org
flowable.idm.ldap.password=secret
# Query params
flowable.idm.ldap.base-dn=dc=serendipity,dc=org
flowable.idm.ldap.user-base-dn=ou=users,dc=serendipity,dc=org
flowable.idm.ldap.group-base-dn=ou=groups,dc=serendipity,dc=org
flowable.idm.ldap.query.user-by-id=(&(objectClass=inetOrgPerson)(uid={0}))
flowable.idm.ldap.query.user-by-full-name-like=(&(objectClass=inetOrgPerson)(|({0}=*{1}*)({2}=*{3}*)))
flowable.idm.ldap.query.all-users=(objectClass=inetOrgPerson)
flowable.idm.ldap.query.groups-for-user=(&(objectClass=groupOfUniqueNames)(uniqueMember={0}))
flowable.idm.ldap.query.all-groups=(objectClass=groupOfUniqueNames)
flowable.idm.ldap.query.group-by-id=(&(objectClass=groupOfUniqueNames)(uniqueId={0}))
# Attribute config
flowable.idm.ldap.attribute.user-id=uid
flowable.idm.ldap.attribute.first-name=cn
flowable.idm.ldap.attribute.last-name=sn
flowable.idm.ldap.attribute.email=mail
flowable.idm.ldap.attribute.group-id=cn
flowable.idm.ldap.attribute.group-name=cn
# Misc config
flowable.idm.ldap.cache.group-size=10000
# flowable.idm.ldap.cache.group-expiration=180000

# Servlet Paths
# flowable.process.servlet.path=/api/workflow-service/process-api
# flowable.cmmn.servlet.path=/api/workflow-service/cmmn-api
# flowable.dmn.servlet.path=/api/workflow-service/dmn-api
# flowable.idm.servlet.path=/api/workflow-service/idm-api

# -- H2 --

# Spring Datasource - H2
# spring.datasource.driver-class-name=org.h2.Driver
# spring.datasource.url=jdbc:h2:mem:db;DB_CLOSE_DELAY=-1
# spring.datasource.username=admin
# spring.datasource.password=secret

# Spring JPA - H2
# spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# spring.jpa.hibernate.ddl-auto=create-drop
